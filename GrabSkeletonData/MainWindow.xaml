<Window x:Class="GrabSkeletonData.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="KinectDTW" Height="720" Width="1000" Loaded="WindowLoaded" Closed="WindowClosed">
    <Window.Resources>
        <SolidColorBrush x:Key="MediumGreyBrush" Color="#ff6e6e6e"/>
        <SolidColorBrush x:Key="KinectBlueBrush" Color="#ff00BCF2"/>
        <SolidColorBrush x:Key="KinectPurpleBrush" Color="#ff52318f"/>

        <Style TargetType="{x:Type Button}" x:Key="ResetButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel Orientation="Horizontal" Background="Transparent">
                            <Grid>
                                <Image x:Name="ResetNormal" Source="Images\ResetNormal.png" Stretch="None" HorizontalAlignment="Center"/>
                                <Image x:Name="ResetHover" Source="Images\ResetHover.png" Stretch="None" HorizontalAlignment="Center" Visibility="Collapsed"/>
                            </Grid>
                            <TextBlock x:Name="ResetText" Text="{TemplateBinding Content}" TextAlignment="Left" VerticalAlignment="Center" Foreground="{StaticResource KinectPurpleBrush}" FontSize="15" Margin="5 0 0 0"/>
                        </StackPanel>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ResetNormal"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="ResetHover"/>
                                <Setter Property="Foreground" Value="{StaticResource KinectBlueBrush}" TargetName="ResetText"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="MeshButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel Orientation="Horizontal" Background="Transparent">
                            <Grid>
                                <Image x:Name="MeshNormal" Source="Images\MeshNormal.png" Stretch="None" HorizontalAlignment="Center"/>
                                <Image x:Name="MeshHover" Source="Images\MeshHover.png" Stretch="None" HorizontalAlignment="Center" Visibility="Collapsed"/>
                            </Grid>
                            <TextBlock x:Name="MeshText" Text="{TemplateBinding Content}" TextAlignment="Left" VerticalAlignment="Center" Foreground="{StaticResource KinectPurpleBrush}" FontSize="15" Margin="5 0 0 0"/>
                        </StackPanel>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="MeshNormal"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="MeshHover"/>
                                <Setter Property="Foreground" Value="{StaticResource KinectBlueBrush}" TargetName="MeshText"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type RadioButton}" x:Key="KinectRadioButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <StackPanel Orientation="Horizontal" Background="Transparent">
                            <Grid x:Name="RadioButtonChecked">
                                <Image x:Name="CheckedNormal" Source="Images\RadioCheckedNormal.png" Stretch="None" HorizontalAlignment="Center"/>
                                <Image x:Name="CheckedHover" Source="Images\RadioCheckedHover.png" Stretch="None" HorizontalAlignment="Center" Visibility="Collapsed"/>
                            </Grid>
                            <Grid x:Name="RadioButtonUnchecked" Visibility="Collapsed">
                                <Image x:Name="UncheckedNormal" Source="Images\RadioUncheckedNormal.png" Stretch="None" HorizontalAlignment="Center"/>
                                <Image x:Name="UncheckedHover" Source="Images\RadioUncheckedHover.png" Stretch="None" HorizontalAlignment="Center" Visibility="Collapsed"/>
                            </Grid>
                            <TextBlock x:Name="RadioButtonText" Text="{TemplateBinding Content}" TextAlignment="Left" VerticalAlignment="Center" Foreground="{StaticResource KinectPurpleBrush}" FontSize="15" Margin="5 0 0 0"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="RadioButtonChecked"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="RadioButtonUnchecked"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="CheckedNormal"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="UncheckedNormal"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="CheckedHover"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="UncheckedHover"/>
                                <Setter Property="Foreground" Value="{StaticResource KinectBlueBrush}" TargetName="RadioButtonText"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type CheckBox}" x:Key="KinectCheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <Grid x:Name="CheckBoxChecked">
                                    <Image x:Name="CheckedNormal" Source="Images\CheckedNormal.png" Stretch="None" HorizontalAlignment="Center"/>
                                    <Image x:Name="CheckedHover" Source="Images\CheckedHover.png" Stretch="None" HorizontalAlignment="Center" Visibility="Collapsed"/>
                                </Grid>
                                <Grid x:Name="CheckBoxUnchecked" Visibility="Collapsed">
                                    <Image x:Name="UncheckedNormal" Source="Images\UncheckedNormal.png" Stretch="None" HorizontalAlignment="Center"/>
                                    <Image x:Name="UncheckedHover" Source="Images\UncheckedHover.png" Stretch="None" HorizontalAlignment="Center" Visibility="Collapsed"/>
                                </Grid>
                                <TextBlock x:Name="CheckBoxText" Text="{TemplateBinding Content}" TextAlignment="Left"  VerticalAlignment="Center" Foreground="{StaticResource KinectPurpleBrush}" FontSize="15"  Margin="9,0,0,0"/>
                            </StackPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="CheckBoxChecked"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="CheckBoxUnchecked"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="CheckedNormal"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="UncheckedNormal"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="CheckedHover"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="UncheckedHover"/>
                                <Setter Property="Foreground" Value="{StaticResource KinectBlueBrush}" TargetName="CheckBoxText"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="Width" Value="11"/>
            <Setter Property="Foreground" Value="{StaticResource KinectPurpleBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Border x:Name="Body" Width="11" Height="22" Background="{TemplateBinding Foreground}"/>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="KinectSlider" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource KinectPurpleBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TickBar x:Name="Tick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Visible"/>
                                <Border x:Name="TrackBackground" Background="{TemplateBinding Foreground}" CornerRadius="1" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                                    <Canvas Margin="-6,-1">
                                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden"/>
                                    </Canvas>
                                </Border>
                                <Track x:Name="PART_Track" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="{StaticResource KinectBlueBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource KinectBlueBrush}" TargetName="Thumb"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="KinectTextFormat" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>
    </Window.Resources>
    <Grid Margin="10 0 10 0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" Margin="0 0 0 20">
            <Image DockPanel.Dock="Left" Margin="0 10 0 5" Stretch="Fill" Height="32" Width="81" Source="Images\Logo.png"/>
            <TextBlock DockPanel.Dock="Right" VerticalAlignment="Bottom" FontFamily="Segoe UI" HorizontalAlignment="Center" FontSize="18" Foreground="{StaticResource MediumGreyBrush}">Happy Taichi Learning</TextBlock>
        </DockPanel>

        <!--<StackPanel Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="3">
            <Label Height="40" Content="TaiChi Happy Learning" FontSize="18" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Width="600" FontStretch="Expanded" FontStyle="Normal" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" FontFamily="Segoe UI"></Label>
        </StackPanel>
        <StackPanel Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="1">
            <Label Height="20" Content="Master" FontSize="8" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Width="600" FontStretch="Expanded" FontStyle="Normal" HorizontalContentAlignment="Left" VerticalContentAlignment="Top" FontFamily="Segoe UI"></Label>
        </StackPanel>
        <StackPanel Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="1">
            <Label Height="20" Content="Learner" FontSize="8" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Width="600" FontStretch="SemiExpanded" FontStyle="Normal" HorizontalContentAlignment="Left" VerticalContentAlignment="Top" FontFamily="Segoe UI"></Label>
        </StackPanel>
        -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <StackPanel >
                    <Image Width="480" Height="360" x:Name="ReplayImage" Margin="0,0" RenderTransformOrigin="0.5,0.5" Source="{Binding Bitmap}"/>
                </StackPanel>
                <StackPanel>
                    <Canvas Width="480" Height="360" x:Name="LearningSkeletonCanvas" ClipToBounds="True" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                        <Canvas Background="transparent" IsHitTestVisible="true"/>
                    </Canvas>
                </StackPanel>
            </Grid>

            <Grid Grid.Column="1">
                <StackPanel >
                    <Image Width="480" Height="360" x:Name="RealTimeImage" Margin="0,0,0,50" RenderTransformOrigin="0.5,0.5" Source="{Binding Bitmap}"/>
                    <!--0.475,0.5-->
                </StackPanel>
                <StackPanel>
                    <Canvas Width="480" Height="360" x:Name="RealTimeSkeletonCanvas" ClipToBounds="True" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                        <!--0.489,0.555-->
                        <Canvas Background="transparent" IsHitTestVisible="true"/>
                    </Canvas>
                </StackPanel>
            </Grid>
        </Grid>

        <Grid Grid.Row="2" Height="245" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" BorderBrush="{StaticResource KinectPurpleBrush}" BorderThickness="2">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" Grid.ColumnSpan="2" Background="{StaticResource KinectPurpleBrush}" Margin="-1 -1 -1 0">
                        <TextBlock Style="{StaticResource KinectTextFormat}" Foreground="White">Actions</TextBlock>
                    </StackPanel>

                    <StackPanel Grid.Row="1">
                        <ComboBox x:Name="gestureList" Width="200">
                            <ComboBoxItem IsSelected="True" Content="@1stMotion"/>
                            <ComboBoxItem Content="@2ndMotion"/>
                            <ComboBoxItem Content="@3rdMotion"/>
                            <ComboBoxItem Content="@4thMotion"/>
                        </ComboBox>
                        <Button Margin="0 0 0 0" Background="{StaticResource KinectPurpleBrush}" BorderBrush="White" BorderThickness="2" Height="25" Width="186" Foreground="White" Focusable="False" x:Name="dtwCapture" Content="Record Motion" Click="DtwCaptureClick"/>
                        <Button Margin="0 0 0 0" Background="{StaticResource KinectPurpleBrush}" BorderBrush="White" BorderThickness="2" Height="25" Width="186" Foreground="White" Focusable="False" x:Name="dtwStore" Content="Stop and Store" IsEnabled="False" Click="DtwStoreClick" />
                        <Button Margin="0 0 0 0" Background="{StaticResource KinectPurpleBrush}" BorderBrush="White" BorderThickness="2" Height="25" Width="186" Foreground="White" Focusable="False" x:Name="dtwReplay" Content="Replay" Click="DtwReplayClick" IsEnabled="True" />
                        <Button Margin="0 0 0 0" Background="{StaticResource KinectPurpleBrush}" BorderBrush="White" BorderThickness="2" Height="25" Width="186" Foreground="White" Focusable="False" x:Name="dtwStopReplay" Content="Stop Replay" Click="DtwStopReplayClick" IsEnabled="False"  />
                        <Button Margin="0 0 0 0" Background="{StaticResource KinectPurpleBrush}" BorderBrush="White" BorderThickness="2" Height="25" Width="186" Foreground="White" Focusable="False" x:Name="dtwStartRegcon" Content="Start Learning" Click="DtwStartRecogn" IsEnabled="True"  />
                        <Button Margin="0 0 0 0" Background="{StaticResource KinectPurpleBrush}" BorderBrush="White" BorderThickness="2" Height="25" Width="186" Foreground="White" Focusable="False" x:Name="dtwStopRegcon" Content="Stop Learning" Click="DtwStopRecogn" IsEnabled="False"  />

                    </StackPanel>

                </Grid>
            </Border>

            <Border Grid.Column="1" BorderBrush="{StaticResource KinectPurpleBrush}" BorderThickness="2" Margin="-1 0 0 0" Width="400">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Row="0" Grid.ColumnSpan="2" Background="{StaticResource KinectPurpleBrush}" Margin="-1 -1 -1 0">
                        <TextBlock Style="{StaticResource KinectTextFormat}" Foreground="White">Settings</TextBlock>
                    </StackPanel>
                    
                    <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Margin="10 10 10 10">
                        <CheckBox Grid.Column="1" Style="{StaticResource KinectCheckBox}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10 0 10 0" Name="SpeechRecogn" Content="Speech Recognize" IsChecked="{Binding NearMode}" AutomationProperties.AutomationId="NearMode" Checked="SpeechRecogn_Checked"/>
                        <Button Style="{StaticResource MeshButton}" Content="Choose Mode" Margin="10 10 5 0" Click="CreateModeSelectionButtonClick" AutomationProperties.AutomationId="ModeSelection"/>

                        <StackPanel Orientation="Horizontal" Margin="0 -3 0 0">
                            <RadioButton Name="traning" Style="{StaticResource KinectRadioButton}" Content="Training" Margin="30 5 0 0" IsChecked="True" AutomationProperties.AutomationId="STLFormat" Checked="traning_Checked"/>
                            <RadioButton Name="challenge" Style="{StaticResource KinectRadioButton}" Content="Challenge" Margin="5 5 0 0" AutomationProperties.AutomationId="OBJFormat"/>
                        </StackPanel>

                        <Button Style="{StaticResource MeshButton}" Content="Choose Difficulty" Margin="10 10 5 0" Click="CreatedifficultyButtonClick" AutomationProperties.AutomationId="DifficultySelection"/>

                        <StackPanel Orientation="Horizontal" Margin="0 -3 0 0">
                            <RadioButton Name="easy" Style="{StaticResource KinectRadioButton}" Content="Easy" Margin="30 5 0 0" IsChecked="True" AutomationProperties.AutomationId="Easy"/>
                            <RadioButton Name="medium" Style="{StaticResource KinectRadioButton}" Content="Medium" Margin="5 5 0 0" AutomationProperties.AutomationId="Medium"/>
                            <RadioButton Name="hard" Style="{StaticResource KinectRadioButton}" Content="Hard" Margin="5 5 0 0" AutomationProperties.AutomationId="Hard"/>
                        </StackPanel>
                    </StackPanel>

                    <Grid Grid.Row="2" Grid.ColumnSpan="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Style="{StaticResource KinectTextFormat}" Foreground="{StaticResource KinectPurpleBrush}" Margin="5 0 0 0">Replay FPS</TextBlock>
                        <Slider Grid.Column="1" Style="{StaticResource KinectSlider}" SmallChange="0.02" LargeChange="1.5" Value="{Binding MaxDepthClip}" Minimum="0.35" Maximum="8.0" Ticks="0.35, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0" Margin="5" AutomationProperties.AutomationId="DepthThresholdMax"/>
                        <!--<TextBlock Grid.Column="2" Style="{StaticResource KinectTextFormat}" Foreground="{StaticResource KinectPurpleBrush}" Margin="0 0 5 0" Text="{Binding MaxDepthClip, Converter={StaticResource dtt}}"/>-->
                    </Grid>
                </Grid>
            </Border>

            <Grid Grid.Column="2">

                <Viewbox>
                    <Canvas Width="152" Height="100" x:Name="MasterSkeletonCanvas" ClipToBounds="True" Margin="0,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" >
                        <Canvas.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#D9040833" Offset="0.238" />
                                <GradientStop Color="#FF46BC44" Offset="1" />
                                <GradientStop Color="#E61747B2" Offset="0.811" />
                            </LinearGradientBrush>
                        </Canvas.Background>
                    </Canvas>
                </Viewbox>
            </Grid>
        </Grid>

        <Grid Grid.Row="3" Height="20"  VerticalAlignment="Top">
            <TextBox FontSize="14" x:Name="status" Margin="0,0,0,0" Focusable="False" BorderThickness="0" Text="" TextAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" />
        </Grid>


    </Grid>

</Window>
